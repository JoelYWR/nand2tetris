// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyboardAddr;

    /** Initializes the keyboard. */
    function void init() {
        let keyboardAddr = 24576;

        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyboardAddr);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char key;

        while (Keyboard.keyPressed() = 0) {}
        let key = Keyboard.keyPressed();
        while (~(Keyboard.keyPressed() = 0)) {}

        do Output.printChar(key);

        return key;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var boolean done;
        var char c;
        var int bufferSize, bufferSize2, i;
        var String line, line2;

        do Output.printString(message);

        let bufferSize = 8;
        let line = String.new(bufferSize);

        while (~done) {
            let c = Keyboard.readChar();
            if (c = String.newLine()) {
                let done = true;
            } else {
                if (c = String.backSpace()) {
                    if (line.length() > 0) {
                        do line.eraseLastChar();
                        if ((bufferSize > 8) & (line.length() = (bufferSize / 2))) {
                            let bufferSize2 = bufferSize / 2;
                            let line2 = String.new(bufferSize2);
                            let i = 0;
                            while (i < bufferSize2) {
                                do line2.appendChar(line.charAt(i));
                                let i = i + 1;
                            }
                            let bufferSize = bufferSize2;
                            do line.dispose();
                            let line = line2;
                        }
                    }
                } else {
                    if (line.length() = bufferSize) {
                        let bufferSize2 = bufferSize * 2;
                        let line2 = String.new(bufferSize2);
                        let i = 0;
                        while (i < bufferSize) {
                            do line2.appendChar(line.charAt(i));
                            let i = i + 1;
                        }
                        let bufferSize = bufferSize2;
                        do line.dispose();
                        let line = line2;
                    }
                    let line = line.appendChar(c);
                }
            }
        }

        return line;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String line;

        let line = Keyboard.readLine(message);

        return line.intValue();
    }
}
